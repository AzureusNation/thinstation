#!/bin/bash

tempdir=`mktemp -d 2>/dev/null`
. /etc/thinstation.defaults

x_echo()
{
	Xdialog	--title "$1" \
		--stdout \
		--msgbox "$2" 18 60 \
			> /dev/null
}

readme()
{
	Xdialog	--title "Install to HD" \
		--textbox /lib/install/README 30 120
	if [ $? != 0 ]; then
		exit $?
	fi
}

mem_check()
{
	MEM=`cat /proc/meminfo |grep -e MemTotal |cut -d: -f2 |sed -r 's/[[:space:]]+/:/g' |cut -d: -f2`
	if [ "$MEM" -lt "2048000" ]; then
		x_echo "Low Memmory" "You will need at least 2gb of RAM\n\
 to use the DevStation."
		exit 1
	fi
}

timezone_locale()
{
	OLDIFS=$IFS
	IFS=$'\t\n'
	option=`cat /lib/indexed-zone.tab`
	Xdialog	--no-tags \
		--stdout \
		--title "Time Zone" \
		--menu "Please Choose Your Time Zone" 20 40 4 ${option} \
		> $tempdir/timezone
	if [ $? != 0 ]; then
		exit 1
	fi
	TIME_ZONE=`cat $tempdir/timezone`

	option=`cat /lib/indexed-locale.tab`
	Xdialog	--no-tags \
		--title "Locale" \
		--fixed-font \
		--stdout \
		--menu "Localization / Keyboard Map" 20 40 4 ${option} \
		> $tempdir/locale
	if [ $? != 0 ]; then
		exit 1
	fi
	LOCALE=`cat $tempdir/locale`

	IFS=$OLDIFS
	TIME_ZONE=`cat /lib/indexed-zone.tab |grep -E ^$TIME_ZONE[[:space:]]+ |cut -f2`
	LOCALE=`cat /lib/indexed-locale.tab |grep -E ^$LOCALE[[:space:]]+ |cut -f2 |cut -d " " -f1`
}

set_res()
{
	if [ ! -e /sys/devices/platform/uvesafb.0/vbe_modes ]; then
		res="video=uvesafb:off"
	else
		index=0
		for i in `xrandr 2>/dev/null |grep -o '   [0-9]*x[0-9]*' |sed -r 's/ //g' |sort -u -t'x' -k1n -k2n`; do
			res[$index]=$i
                	echo "$index $i" >> /$tempdir/reslist
                	let index=index+1
		done
		list=`cat $tempdir/reslist`
		Xdialog	--title "Resolution" \
			--no-label \
			--no-tags \
			--stdout \
			--menu "What is your prefered\n screen resolution?" 20 40 4 $list \
				> $tempdir/reschoice
		if [ $? == 0 ]; then
			index=`cat $tempdir/reschoice`
			res="video=uvesafb:"${res[$index]}"-32,mtrr:0,ywrap"
			SCREEN_RESOLUTION=${res[$index]}
		else
			exit 1
		fi
	fi
}

disk_setup()
{
	index=0
	for i in `blockdev --report |sed -r 's/[[:space:]]+/:/g' |cut -d ":" -f7 |grep -e / |grep -v [0-9]`; do
		disksize[$index]=`blockdev --report |sed -r 's/[[:space:]]+/:/g' | grep -e $i\$ |cut -d ":" -f6`
		disk[$index]=$i
		if [ "${disksize[$index]}" -gt "20000000000" ]; then
			diskentry="${disk[$index]}:${disksize[$index]}"
			echo "$index $diskentry" >> $tempdir/available.$$
		fi
		let index=index+1
	done
	list=`cat $tempdir/available.$$`
	if [ "$[index]" == "1" ] && [ "$list" != "" ]; then
		index=0
	elif [ "$list" != "" ]; then
		Xdialog	--title "Select Disk" \
			--no-label \
			--stdout \
			--no-tags \
			--menu "Which disk would you like to use?" 20 40 4 $list \
			> $tempdir/sldisk.$$
		if [ $? == 0 ]; then
			index=`cat $tempdir/sldisk.$$ |cut -d " " -f1`
		else
			exit 1
		fi
	else
		x_echo '"No usable disk"' '"ThinStation Dev requirees a disk at least 20GB in size. Exiting"'
		exit 1
	fi

	disk=${disk[$index]}
	x_echo "Selected Disk" "Using disk $disk"
	Xdialog	--title "Buggy Bios" \
		--no-tags \
		--stdout \
		--checklist "Do you have a buggy bios that requires the\n start of the partition to be at sector 1\n instead of the default sector of 2048?" \
			0 0 2 1 "Enable Buggy Bios Support" off \
			> $tempdir/buggy
	if [ $? == 0 ]; then
		if [ "`cat $tempdir/buggy`" == "1" ]; then
			buggybios=true
		else
			buggybios=false
		fi
	else
		exit 1
	fi
}

install_it()
{
	Xdialog	--title "Warning" \
		--default-no \
		--stdout \
		--yesno "All Data on the selected disk is about to be erased.\n Do you Wish to continue?" 10 60
	if [ $? != 0 ]; then
		exit 1
	fi
	Xdialog	--title "Warning" \
		--stdout \
		--default-no \
		--yesno "Are you really sure?" 10 50
	if [ $? != 0 ]; then
        	exit l
	else
		$XTERM_CMD -T "Installing" $ARG /bin/install.sh $disk $buggybios
	fi
}

cd /
readme
mem_check

if ! proxy-setup ; then
	x_echo "Broken Internet" "No Internet Connectivity. Exiting."
	exit 2
fi

disk_setup
set_res
timezone_locale

if [ "`basename $XTERM_CMD`" == "Terminal" ] || [ "`basename $XTERM_CMD`" == "xfce4-terminal" ]; then
        ARG="--disable-server -x"
else
        ARG="-e"
fi

install_it

echo "LOCALE=$LOCALE" > /root/thinstation.conf.user
echo "TIME_ZONE=$TIME_ZONE" >> /root/thinstation.conf.user
echo "SCREEN_RESOLUTION=$SCREEN_RESOLUTION" >> /root/thinstation.conf.user
echo -e '#AUDIO_LEVEL=90
#MIC_LEVEL=80
#X_DPI=100
#USE_XRANDR=FALSE
#XRANDR_OPTIONS="-s 1920x1080 --output DVI2 --right-of DVI1"
#X_DRIVER_OPTION1="HWcursor False"
#X_DRIVER_OPTION2="PanelSize 1024x600"
NET_HOSTNAME=DevStation_*
#NET_TELNETD_ENABLED=OFF' >> /root/thinstation.conf.user

cat /boot/syslinux.tpl |sed -e "s/\$RES/$res/g" > /boot/syslinux.cfg

if [ ! -e /boot/vmlinuz ] ; then
	x_echo "Fail" "Something must have gone wrong\n\
 with the installation"
	exit 1
fi

x_echo "Almost Done" "\
You are almost ready to make your first image.\n\
You will need to reboot and run build to init\n\
the build env, afterwards, you can run build\n\
to build images."

x_echo "PXE Booting" "\
This dev workstation is a PXE boot server.\n\
You can set it's IP as the next boot server\n\
in your DHCP server, and set the boot file to\n\
pxelinux.0 . This will let clients boot directly\n\
from images created in the build env of this\n\
workstation."

x_echo "Alldone" "\
Your system is now bootable, but the password is\n\
guessable. Please reboot and if everything is ok,\n\
Tweak your DevStation and disable the\n\
telnet serice."

exit 0

