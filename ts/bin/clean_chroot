#!/bin/bash
# Description: Thinstation Utility to clean chroot for git push.
# URL: http://www.thinstation.org
# Maintainer: Donald A. Cupp Jr. (don cupp jr at ya hoo dot com)

create_wind()
{
	echo -e "\tCreating fast clean cache for $i"
	echo "#`md5sum .dna`" > /ts/wind_cache/$i.turbo
        update -c -d $i >> /ts/wind_cache/$i.turbo
	echo -e "\tCleaning package $i"
        . /ts/wind_cache/$i.turbo
}

create_unwind()
{
	echo -e "\tCreating fast install cache for $i"
        echo "#`md5sum .dna`" > /ts/unwind_cache/$i.turbo
        update -d $i |
        sed -e 's/^cp \//3:/g' -e 's/mkdir \-/2:/g' -e 's/ln \-/4:/g' -e 's/touch \//5:/g' |
        sort |
        uniq |
        sed -e 's/^2:/mkdir \-/g' -e 's/^3:/cp \//g' -e 's/^4:/ln \-/g' -e 's/^5:/touch \//g' >> /ts/unwind_cache/$i.turbo
}

stage1()
{
	echo "Cleaning ThinStation Build Environment"
	cd $TSWRKNG
	./build --removeall
	cp conf/default/* .
	cd /
	for theme in `ls $TSWRKNG/utils/tools/splash |grep -v bin`; do
		for res in `ls $TSWRKNG/utils/tools/splash/$theme |grep -E -v '1024x768|scalable'` ; do
			rm -rf $TSWRKNG/utils/tools/splash/$theme/$res
		done
	done
	for i in \
		/build \
		$TSWRKNG/tmp-tree \
                $TSWRKNG/boot-images/{pxe,syslinux,extlinux,iso,pkg-packages}/* \
		$TSWRKNG/boot-images/initrd/{kernel_parameters,initrd,lib.squash,vmlinuz*} \
		$TSWRKNG/{thinstation.conf.sample,background-1024x768.jpg}; do
			if [ -e $i ];
				then rm -rf $i
			fi
	done
	for i in `ls --color=never $TSWRKNG/packages` ;
		do
			if [ -e $TSWRKNG/packages/$i/.dna ] ;
				then
					cd $TSWRKNG/packages/$i
					echo -e "\tCleaning package $i"
					if [ -e /ts/wind_cache/$i.turbo ]; then
						if cat /ts/wind_cache/$i.turbo |grep -e "#" |cut -d "#" -f2 |md5sum -c --quiet ; then
							. /ts/wind_cache/$i.turbo
						else
							create_wind
						fi
					else
						create_wind
					fi
					if [ -e /ts/unwind_cache/$i.turbo ]; then
						if cat /ts/unwind_cache/$i.turbo|grep -e "#" |cut -d "#" -f2 |md5sum -c --quiet ; then
							echo "Allready made" >> /dev/null
						else
							create_unwind
						fi
					else
						create_unwind
					fi
			fi
		done
	echo -e "\tCleaning tools"
	update -c -t
	echo "Checking Ports Directories for Downloaded Files"
	for d in /usr/ports/{contrib,core,xorg,opt} /ts/ports/{kernel-modules,xorg,gnome,broken,chroot,static-source,components,lxde,extensions,xfce,ruby,perl};
		do
			if [ -d $d ] ; then
			cd $d
			for i in `ls --color=no`;
				do
					cd $d/$i
					f=`find . |grep -e pkg.tar.gz`
					if [ "$f" != "" ];
						then
							mv $f tempfile
							pkgmk -c
							mv tempfile $f
						elif [ "`echo $d |grep -e ts/ports`" != "" ] ; then
							pkgmk -c
						else
							cd $d
							rm -rf $d/$i
					fi
				done
			fi
		done
	touch /cleanstage2
	if [ ! -e /CLEAN ] ; then
		echo "Please Type \"exit\" to Finish the Cleaning Process"
	fi
}

stage2()
{
	for i in usr/{var,swat,private,bin,etc,include,lib,man,sbin,share,src,local,GNUstep,www,ROX,php,libexec} run www share home man bin boot dev etc lib mnt opt proc root sbin sys tmp var ts/components ;
		do
			if [ -e $i ] ;
				then
					rm -rf $ROOT/$i
			fi
		done
	rm cleanstage2
}

ROOT=$PWD
if [ -e $ROOT/cleanstage2 ] ;
	then
		stage2
	else
		stage1
fi

